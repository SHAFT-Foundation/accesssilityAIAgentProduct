# Multi-stage production Dockerfile for Accessibility Scanner Worker
# Optimized for container orchestration and security

# Build stage
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install dependencies
RUN npm ci --only=production --silent && \
    npm ci --only=development --silent

# Copy source code
COPY src/ ./src/

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Install runtime dependencies and security updates
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    docker-cli \
    chromium \
    nss \
    freetype \
    harfbuzz && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S worker && \
    adduser -S scanner -u 1001 -G worker

# Create app directory
WORKDIR /app
RUN chown -R scanner:worker /app

# Copy built application
COPY --from=builder --chown=scanner:worker /app/dist ./dist
COPY --from=builder --chown=scanner:worker /app/node_modules ./node_modules
COPY --from=builder --chown=scanner:worker /app/package*.json ./

# Copy worker scripts
COPY --chown=scanner:worker scripts/ ./scripts/
RUN chmod +x ./scripts/*.sh

# Set environment variables
ENV NODE_ENV=production \
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    LOG_LEVEL=info \
    WORKER_CONCURRENCY=2

# Create necessary directories
RUN mkdir -p /app/logs /app/tmp /app/workspaces && \
    chown -R scanner:worker /app/logs /app/tmp /app/workspaces

# Clean up
RUN npm cache clean --force

# Switch to non-root user
USER scanner

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start the worker
CMD ["node", "dist/worker.js"]